import "@mantine/core/styles.css";
import "@mantine/notifications/styles.css";
import "@mantine/dates/styles.css";
import "mantine-react-table/styles.css";
import "@mantine/tiptap/styles.css";
import type { Metadata } from "next";
import { Geist_Mono, Outfit } from "next/font/google";
import "./globals.css";
import Fastro from "@/lib/Fastro";
import { Notifications } from "@mantine/notifications";
import { NavigationProgress } from "@mantine/nprogress";
import "@mantine/nprogress/styles.css";

import {
  ColorSchemeScript,
  MantineProvider,
  createTheme,
  mantineHtmlProps,
} from "@mantine/core";
import { NotificationProvider } from "@/providers/notification-provider";

const geistSans = Outfit({
  variable: "--font-geist-sans",
  subsets: ["latin"],
});

const geistMono = Geist_Mono({
  variable: "--font-geist-mono",
  subsets: ["latin"],
});

export const metadata: Metadata = {
  title: "Create Next App",
  description: "Generated by create next app",
};

// Set the global theme of the app
const theme = createTheme({
  fontFamily: "Outfit, sans-serif",
  primaryColor: "violet",
  // You can pass mantine props here
});

export default function RootLayout({
  children,
}: Readonly<{
  children: React.ReactNode;
}>) {
  return (
    <html lang="en" {...mantineHtmlProps}>
      <head>
        <ColorSchemeScript />
      </head>
      <body
        className={`${geistSans.variable} ${geistMono.variable} antialiased`}
      >
        <MantineProvider withCssVariables theme={theme}>
          <NotificationProvider>
            <Fastro provider_type="supabase">
              <Notifications />
              <NavigationProgress />
              {children}
            </Fastro>
          </NotificationProvider>
        </MantineProvider>
      </body>
    </html>
  );
}
